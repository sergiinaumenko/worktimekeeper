/*
 * This file is generated by jOOQ.
 */
package ua.worktimekeeper.model.dayoff.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ua.worktimekeeper.model.dayoff.Indexes;
import ua.worktimekeeper.model.dayoff.Keys;
import ua.worktimekeeper.model.dayoff.Public;
import ua.worktimekeeper.model.dayoff.tables.records.HolidaysRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Holidays extends TableImpl<HolidaysRecord> {

    private static final long serialVersionUID = -1044009710;

    /**
     * The reference instance of <code>public.holidays</code>
     */
    public static final Holidays HOLIDAYS = new Holidays();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HolidaysRecord> getRecordType() {
        return HolidaysRecord.class;
    }

    /**
     * The column <code>public.holidays.h_id</code>.
     */
    public final TableField<HolidaysRecord, Long> H_ID = createField(DSL.name("h_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.holidays.h_date</code>.
     */
    public final TableField<HolidaysRecord, Date> H_DATE = createField(DSL.name("h_date"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>public.holidays.h_name</code>.
     */
    public final TableField<HolidaysRecord, String> H_NAME = createField(DSL.name("h_name"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.holidays.h_description</code>.
     */
    public final TableField<HolidaysRecord, String> H_DESCRIPTION = createField(DSL.name("h_description"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>public.holidays</code> table reference
     */
    public Holidays() {
        this(DSL.name("holidays"), null);
    }

    /**
     * Create an aliased <code>public.holidays</code> table reference
     */
    public Holidays(String alias) {
        this(DSL.name(alias), HOLIDAYS);
    }

    /**
     * Create an aliased <code>public.holidays</code> table reference
     */
    public Holidays(Name alias) {
        this(alias, HOLIDAYS);
    }

    private Holidays(Name alias, Table<HolidaysRecord> aliased) {
        this(alias, aliased, null);
    }

    private Holidays(Name alias, Table<HolidaysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Holidays(Table<O> child, ForeignKey<O, HolidaysRecord> key) {
        super(child, key, HOLIDAYS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HOLIDAYS_PK);
    }

    @Override
    public UniqueKey<HolidaysRecord> getPrimaryKey() {
        return Keys.HOLIDAYS_PK;
    }

    @Override
    public List<UniqueKey<HolidaysRecord>> getKeys() {
        return Arrays.<UniqueKey<HolidaysRecord>>asList(Keys.HOLIDAYS_PK);
    }

    @Override
    public Holidays as(String alias) {
        return new Holidays(DSL.name(alias), this);
    }

    @Override
    public Holidays as(Name alias) {
        return new Holidays(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Holidays rename(String name) {
        return new Holidays(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Holidays rename(Name name) {
        return new Holidays(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Date, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
