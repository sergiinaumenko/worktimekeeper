/*
 * This file is generated by jOOQ.
 */
package ua.worktimekeeper.model.dayoff.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ua.worktimekeeper.model.dayoff.Indexes;
import ua.worktimekeeper.model.dayoff.Keys;
import ua.worktimekeeper.model.dayoff.Public;
import ua.worktimekeeper.model.dayoff.tables.records.UserGroupMappingRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserGroupMapping extends TableImpl<UserGroupMappingRecord> {

    private static final long serialVersionUID = 573689265;

    /**
     * The reference instance of <code>public.user_group_mapping</code>
     */
    public static final UserGroupMapping USER_GROUP_MAPPING = new UserGroupMapping();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserGroupMappingRecord> getRecordType() {
        return UserGroupMappingRecord.class;
    }

    /**
     * The column <code>public.user_group_mapping.ugm_user_id</code>.
     */
    public final TableField<UserGroupMappingRecord, Long> UGM_USER_ID = createField(DSL.name("ugm_user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.user_group_mapping.ugm_group_id</code>.
     */
    public final TableField<UserGroupMappingRecord, Long> UGM_GROUP_ID = createField(DSL.name("ugm_group_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.user_group_mapping</code> table reference
     */
    public UserGroupMapping() {
        this(DSL.name("user_group_mapping"), null);
    }

    /**
     * Create an aliased <code>public.user_group_mapping</code> table reference
     */
    public UserGroupMapping(String alias) {
        this(DSL.name(alias), USER_GROUP_MAPPING);
    }

    /**
     * Create an aliased <code>public.user_group_mapping</code> table reference
     */
    public UserGroupMapping(Name alias) {
        this(alias, USER_GROUP_MAPPING);
    }

    private UserGroupMapping(Name alias, Table<UserGroupMappingRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserGroupMapping(Name alias, Table<UserGroupMappingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserGroupMapping(Table<O> child, ForeignKey<O, UserGroupMappingRecord> key) {
        super(child, key, USER_GROUP_MAPPING);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_GROUP_MAPPING_PK);
    }

    @Override
    public UniqueKey<UserGroupMappingRecord> getPrimaryKey() {
        return Keys.USER_GROUP_MAPPING_PK;
    }

    @Override
    public List<UniqueKey<UserGroupMappingRecord>> getKeys() {
        return Arrays.<UniqueKey<UserGroupMappingRecord>>asList(Keys.USER_GROUP_MAPPING_PK);
    }

    @Override
    public List<ForeignKey<UserGroupMappingRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserGroupMappingRecord, ?>>asList(Keys.USER_GROUP_MAPPING__UGM_USER_FK, Keys.USER_GROUP_MAPPING__UGM_GROUP_FK);
    }

    public UserDetails userDetails() {
        return new UserDetails(this, Keys.USER_GROUP_MAPPING__UGM_USER_FK);
    }

    public UserGroups userGroups() {
        return new UserGroups(this, Keys.USER_GROUP_MAPPING__UGM_GROUP_FK);
    }

    @Override
    public UserGroupMapping as(String alias) {
        return new UserGroupMapping(DSL.name(alias), this);
    }

    @Override
    public UserGroupMapping as(Name alias) {
        return new UserGroupMapping(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserGroupMapping rename(String name) {
        return new UserGroupMapping(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserGroupMapping rename(Name name) {
        return new UserGroupMapping(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
