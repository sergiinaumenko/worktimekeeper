/*
 * This file is generated by jOOQ.
 */
package ua.worktimekeeper.model.dayoff.tables.records;


import java.sql.Date;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ua.worktimekeeper.model.dayoff.tables.Holidays;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HolidaysRecord extends UpdatableRecordImpl<HolidaysRecord> implements Record4<Long, Date, String, String> {

    private static final long serialVersionUID = 1142059843;

    /**
     * Setter for <code>public.holidays.h_id</code>.
     */
    public HolidaysRecord setHId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.holidays.h_id</code>.
     */
    public Long getHId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.holidays.h_date</code>.
     */
    public HolidaysRecord setHDate(Date value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.holidays.h_date</code>.
     */
    public Date getHDate() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>public.holidays.h_name</code>.
     */
    public HolidaysRecord setHName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.holidays.h_name</code>.
     */
    public String getHName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.holidays.h_description</code>.
     */
    public HolidaysRecord setHDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.holidays.h_description</code>.
     */
    public String getHDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Date, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Date, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Holidays.HOLIDAYS.H_ID;
    }

    @Override
    public Field<Date> field2() {
        return Holidays.HOLIDAYS.H_DATE;
    }

    @Override
    public Field<String> field3() {
        return Holidays.HOLIDAYS.H_NAME;
    }

    @Override
    public Field<String> field4() {
        return Holidays.HOLIDAYS.H_DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getHId();
    }

    @Override
    public Date component2() {
        return getHDate();
    }

    @Override
    public String component3() {
        return getHName();
    }

    @Override
    public String component4() {
        return getHDescription();
    }

    @Override
    public Long value1() {
        return getHId();
    }

    @Override
    public Date value2() {
        return getHDate();
    }

    @Override
    public String value3() {
        return getHName();
    }

    @Override
    public String value4() {
        return getHDescription();
    }

    @Override
    public HolidaysRecord value1(Long value) {
        setHId(value);
        return this;
    }

    @Override
    public HolidaysRecord value2(Date value) {
        setHDate(value);
        return this;
    }

    @Override
    public HolidaysRecord value3(String value) {
        setHName(value);
        return this;
    }

    @Override
    public HolidaysRecord value4(String value) {
        setHDescription(value);
        return this;
    }

    @Override
    public HolidaysRecord values(Long value1, Date value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HolidaysRecord
     */
    public HolidaysRecord() {
        super(Holidays.HOLIDAYS);
    }

    /**
     * Create a detached, initialised HolidaysRecord
     */
    public HolidaysRecord(Long hId, Date hDate, String hName, String hDescription) {
        super(Holidays.HOLIDAYS);

        set(0, hId);
        set(1, hDate);
        set(2, hName);
        set(3, hDescription);
    }
}
