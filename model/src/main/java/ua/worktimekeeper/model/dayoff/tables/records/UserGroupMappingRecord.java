/*
 * This file is generated by jOOQ.
 */
package ua.worktimekeeper.model.dayoff.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ua.worktimekeeper.model.dayoff.tables.UserGroupMapping;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserGroupMappingRecord extends UpdatableRecordImpl<UserGroupMappingRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -1790498872;

    /**
     * Setter for <code>public.user_group_mapping.ugm_user_id</code>.
     */
    public UserGroupMappingRecord setUgmUserId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_group_mapping.ugm_user_id</code>.
     */
    public Long getUgmUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_group_mapping.ugm_group_id</code>.
     */
    public UserGroupMappingRecord setUgmGroupId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_group_mapping.ugm_group_id</code>.
     */
    public Long getUgmGroupId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserGroupMapping.USER_GROUP_MAPPING.UGM_USER_ID;
    }

    @Override
    public Field<Long> field2() {
        return UserGroupMapping.USER_GROUP_MAPPING.UGM_GROUP_ID;
    }

    @Override
    public Long component1() {
        return getUgmUserId();
    }

    @Override
    public Long component2() {
        return getUgmGroupId();
    }

    @Override
    public Long value1() {
        return getUgmUserId();
    }

    @Override
    public Long value2() {
        return getUgmGroupId();
    }

    @Override
    public UserGroupMappingRecord value1(Long value) {
        setUgmUserId(value);
        return this;
    }

    @Override
    public UserGroupMappingRecord value2(Long value) {
        setUgmGroupId(value);
        return this;
    }

    @Override
    public UserGroupMappingRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserGroupMappingRecord
     */
    public UserGroupMappingRecord() {
        super(UserGroupMapping.USER_GROUP_MAPPING);
    }

    /**
     * Create a detached, initialised UserGroupMappingRecord
     */
    public UserGroupMappingRecord(Long ugmUserId, Long ugmGroupId) {
        super(UserGroupMapping.USER_GROUP_MAPPING);

        set(0, ugmUserId);
        set(1, ugmGroupId);
    }
}
