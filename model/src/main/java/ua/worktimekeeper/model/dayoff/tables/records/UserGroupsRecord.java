/*
 * This file is generated by jOOQ.
 */
package ua.worktimekeeper.model.dayoff.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ua.worktimekeeper.model.dayoff.tables.UserGroups;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserGroupsRecord extends UpdatableRecordImpl<UserGroupsRecord> implements Record3<Long, String, String> {

    private static final long serialVersionUID = 244706198;

    /**
     * Setter for <code>public.user_groups.group_id</code>.
     */
    public UserGroupsRecord setGroupId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_groups.group_id</code>.
     */
    public Long getGroupId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_groups.group_name</code>.
     */
    public UserGroupsRecord setGroupName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_groups.group_name</code>.
     */
    public String getGroupName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_groups.group_description</code>.
     */
    public UserGroupsRecord setGroupDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_groups.group_description</code>.
     */
    public String getGroupDescription() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserGroups.USER_GROUPS.GROUP_ID;
    }

    @Override
    public Field<String> field2() {
        return UserGroups.USER_GROUPS.GROUP_NAME;
    }

    @Override
    public Field<String> field3() {
        return UserGroups.USER_GROUPS.GROUP_DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getGroupId();
    }

    @Override
    public String component2() {
        return getGroupName();
    }

    @Override
    public String component3() {
        return getGroupDescription();
    }

    @Override
    public Long value1() {
        return getGroupId();
    }

    @Override
    public String value2() {
        return getGroupName();
    }

    @Override
    public String value3() {
        return getGroupDescription();
    }

    @Override
    public UserGroupsRecord value1(Long value) {
        setGroupId(value);
        return this;
    }

    @Override
    public UserGroupsRecord value2(String value) {
        setGroupName(value);
        return this;
    }

    @Override
    public UserGroupsRecord value3(String value) {
        setGroupDescription(value);
        return this;
    }

    @Override
    public UserGroupsRecord values(Long value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserGroupsRecord
     */
    public UserGroupsRecord() {
        super(UserGroups.USER_GROUPS);
    }

    /**
     * Create a detached, initialised UserGroupsRecord
     */
    public UserGroupsRecord(Long groupId, String groupName, String groupDescription) {
        super(UserGroups.USER_GROUPS);

        set(0, groupId);
        set(1, groupName);
        set(2, groupDescription);
    }
}
